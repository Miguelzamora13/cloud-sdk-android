/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.poi.generated.request.subscriptions

import cloud.pace.sdk.api.poi.POIAPI
import cloud.pace.sdk.api.poi.generated.model.*
import cloud.pace.sdk.api.request.BaseRequest
import retrofit2.Call
import retrofit2.http.*

object GetSubscriptionsAPI {

    interface GetSubscriptionsService {
        /* Get the list of POI subscriptions for the user or device
 */
        /* Returns a list of all current (not expired) subscriptions of the user.
 */
        @GET("subscriptions")
        fun getSubscriptions(
            @HeaderMap headers: Map<String, String>,
            @retrofit2.http.Body body: Body
        ): Call<Subscription>
    }

    /* Returns a list of all current (not expired) subscriptions of the user.
     */
    class Body {

        var data: List<SubscriptionBody>? = null
    }

    open class Request : BaseRequest() {

        fun getSubscriptions(
            body: Body,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<Subscription> {
            val headers = headers(true, "application/vnd.api+json", "application/vnd.api+json", additionalHeaders)

            return retrofit(POIAPI.baseUrl, additionalParameters, readTimeout)
                .create(GetSubscriptionsService::class.java)
                .getSubscriptions(
                    headers,
                    body
                )
        }
    }

    fun POIAPI.SubscriptionsAPI.getSubscriptions(
        body: Body,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().getSubscriptions(
        body,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
