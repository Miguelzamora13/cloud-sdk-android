/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.poi.generated.request.admin

import cloud.pace.sdk.api.poi.POIAPI
import cloud.pace.sdk.api.poi.generated.model.*
import cloud.pace.sdk.api.request.BaseRequest
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.http.*

object DeduplicatePoiAPI {

    interface DeduplicatePoiService {
        /* Specify if a list of POI are considered to be duplicates of a specific POI */
        @PATCH("admin/poi/dedupe")
        fun deduplicatePoi(
            @HeaderMap headers: Map<String, String>,
            @retrofit2.http.Body body: Body
        ): Call<ResponseBody>
    }

    class Body {

        var data: DedupeRequestBody? = null
    }

    open class Request : BaseRequest() {

        fun deduplicatePoi(
            body: Body,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<ResponseBody> {
            val headers = headers(true, "application/vnd.api+json", "application/vnd.api+json", additionalHeaders)

            return retrofit(POIAPI.baseUrl, additionalParameters, readTimeout)
                .create(DeduplicatePoiService::class.java)
                .deduplicatePoi(
                    headers,
                    body
                )
        }
    }

    fun POIAPI.AdminAPI.deduplicatePoi(
        body: Body,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().deduplicatePoi(
        body,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
