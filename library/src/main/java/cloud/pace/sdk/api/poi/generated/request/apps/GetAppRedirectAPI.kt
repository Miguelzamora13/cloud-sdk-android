/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.poi.generated.request.apps

import cloud.pace.sdk.api.poi.POIAPI
import cloud.pace.sdk.api.request.BaseRequest
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.http.GET
import retrofit2.http.HeaderMap
import retrofit2.http.Path

object GetAppRedirectAPI {

    interface GetAppRedirectService {
        /* Redirects the caller to the specified app */
        @GET("apps/{appID}/redirect")
        fun getAppRedirect(
            @HeaderMap headers: Map<String, String>,
            /* ID of the App */
            @Path("appID") appID: String? = null
        ): Call<ResponseBody>
    }

    open class Request : BaseRequest() {

        fun getAppRedirect(
            appID: String? = null,
            readTimeout: Long? = null,
            additionalHeaders: Map<String, String>? = null,
            additionalParameters: Map<String, String>? = null
        ): Call<ResponseBody> {
            val headers = headers(false, "application/json", "application/json", additionalHeaders)

            return retrofit(POIAPI.baseUrl, additionalParameters, readTimeout)
                .create(GetAppRedirectService::class.java)
                .getAppRedirect(
                    headers,
                    appID
                )
        }
    }

    fun POIAPI.AppsAPI.getAppRedirect(
        appID: String? = null,
        readTimeout: Long? = null,
        additionalHeaders: Map<String, String>? = null,
        additionalParameters: Map<String, String>? = null
    ) = Request().getAppRedirect(
        appID,
        readTimeout,
        additionalHeaders,
        additionalParameters
    )
}
