/*
 * PLEASE DO NOT EDIT!
 *
 * Generated by SwagGen with Kotlin template.
 * https://github.com/pace/SwagGen
 */

package cloud.pace.sdk.api.poi.generated.model

import com.google.gson.annotations.SerializedName
import com.squareup.moshi.Json
import moe.banana.jsonapi2.HasMany
import moe.banana.jsonapi2.HasOne
import moe.banana.jsonapi2.JsonApi
import moe.banana.jsonapi2.Resource
import java.util.*

class SubscriptionBody {

    var attributes: Attributes? = null
    /* POI Subscription ID */
    var id: String? = null
    var type: Type? = null

    enum class Type(val value: String) {
        @SerializedName("subscription")
        @Json(name = "subscription")
        SUBSCRIPTION("subscription")
    }

    class Attributes {

        lateinit var observedPois: List<String>
        /* PRN describing the push token. E.g. FCM token. */
        lateinit var pushToken: String
        /* Optional conditions to reduce the number of notifications to the device. For a notification to be fired, all conditions need to be true.
    The example reads as `fuelPrice < 1.3 && fuelType == "diesel"`. For or conditions use multiple subscriptions.
     */
        var conditions: Conditions? = null
        /* Time of subscription creation (iso8601 without time zone) */
        var createdAt: Date? = null
        /* Time when the subscription will expire, must not be more then 60 days in the future (iso8601 without time zone) */
        var expiresAt: Date? = null
        /* Time of LocationBasedApp last update (iso8601 without time zone) */
        var updatedAt: Date? = null

        /* Optional conditions to reduce the number of notifications to the device. For a notification to be fired, all conditions need to be true.
        The example reads as `fuelPrice < 1.3 && fuelType == "diesel"`. For or conditions use multiple subscriptions.
         */
        class Conditions {

            /* Condition on the fuelPrice of a gas station. */
            var fuelPrice: FuelPrice? = null
            /* Condition on the fuelType of a gas station */
            var fuelType: FuelType? = null

            /* Condition on the fuelPrice of a gas station. */
            class FuelPrice {

                /* Fuel price is less then given amount. Amount is always given in the currency of the gas station. The units are not scaled, for `EUR`, the value 1.3 means 1 euro and 30 cents.
             */
                var lt: Double? = null
            }

            /* Condition on the fuelType of a gas station */
            class FuelType {

                /* Fuel type is equal to given value */
                var eq: Eq? = null

                /* Fuel type is equal to given value */
                enum class Eq(val value: String) {
                    @SerializedName("ron98")
                    @Json(name = "ron98")
                    RON98("ron98"),
                    @SerializedName("ron98e5")
                    @Json(name = "ron98e5")
                    RON98E5("ron98e5"),
                    @SerializedName("ron95e10")
                    @Json(name = "ron95e10")
                    RON95E10("ron95e10"),
                    @SerializedName("diesel")
                    @Json(name = "diesel")
                    DIESEL("diesel"),
                    @SerializedName("e85")
                    @Json(name = "e85")
                    E85("e85"),
                    @SerializedName("ron91")
                    @Json(name = "ron91")
                    RON91("ron91"),
                    @SerializedName("ron95e5")
                    @Json(name = "ron95e5")
                    RON95E5("ron95e5"),
                    @SerializedName("ron100")
                    @Json(name = "ron100")
                    RON100("ron100"),
                    @SerializedName("dieselGtl")
                    @Json(name = "dieselGtl")
                    DIESELGTL("dieselGtl"),
                    @SerializedName("dieselB7")
                    @Json(name = "dieselB7")
                    DIESELB7("dieselB7"),
                    @SerializedName("dieselB15")
                    @Json(name = "dieselB15")
                    DIESELB15("dieselB15"),
                    @SerializedName("dieselPremium")
                    @Json(name = "dieselPremium")
                    DIESELPREMIUM("dieselPremium"),
                    @SerializedName("lpg")
                    @Json(name = "lpg")
                    LPG("lpg"),
                    @SerializedName("cng")
                    @Json(name = "cng")
                    CNG("cng"),
                    @SerializedName("lng")
                    @Json(name = "lng")
                    LNG("lng"),
                    @SerializedName("h2")
                    @Json(name = "h2")
                    H2("h2"),
                    @SerializedName("truckDiesel")
                    @Json(name = "truckDiesel")
                    TRUCKDIESEL("truckDiesel"),
                    @SerializedName("adBlue")
                    @Json(name = "adBlue")
                    ADBLUE("adBlue"),
                    @SerializedName("truckAdBlue")
                    @Json(name = "truckAdBlue")
                    TRUCKADBLUE("truckAdBlue"),
                    @SerializedName("truckDieselPremium")
                    @Json(name = "truckDieselPremium")
                    TRUCKDIESELPREMIUM("truckDieselPremium"),
                    @SerializedName("truckLpg")
                    @Json(name = "truckLpg")
                    TRUCKLPG("truckLpg"),
                    @SerializedName("heatingOil")
                    @Json(name = "heatingOil")
                    HEATINGOIL("heatingOil")
                }
            }
        }
    }
}
