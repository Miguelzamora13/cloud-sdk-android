// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tile_query_response.proto

package cloud.pace.sdk.poikit.poi.download;

public final class TileQueryResponseOuterClass {
    private TileQueryResponseOuterClass() {
    }

    public static void registerAllExtensions(
        com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
        com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
            (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface TileQueryResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:TileQueryResponse)
        com.google.protobuf.MessageOrBuilder {

        /**
         * <code>uint32 zoom = 1;</code>
         */
        int getZoom();

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        java.util.List<TileQueryResponse.VectorTile>
        getVectorTilesList();

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        TileQueryResponse.VectorTile getVectorTiles(int index);

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        int getVectorTilesCount();

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        java.util.List<? extends TileQueryResponse.VectorTileOrBuilder>
        getVectorTilesOrBuilderList();

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        TileQueryResponse.VectorTileOrBuilder getVectorTilesOrBuilder(
            int index);

        /**
         * <code>uint64 invalidation_token = 3;</code>
         */
        long getInvalidationToken();
    }

    /**
     * Protobuf type {@code TileQueryResponse}
     */
    public static final class TileQueryResponse extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:TileQueryResponse)
        TileQueryResponseOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use TileQueryResponse.newBuilder() to construct.
        private TileQueryResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private TileQueryResponse() {
            zoom_ = 0;
            vectorTiles_ = java.util.Collections.emptyList();
            invalidationToken_ = 0L;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private TileQueryResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            zoom_ = input.readUInt32();
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                vectorTiles_ = new java.util.ArrayList<VectorTile>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            vectorTiles_.add(
                                input.readMessage(VectorTile.parser(), extensionRegistry));
                            break;
                        }
                        case 24: {

                            invalidationToken_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    vectorTiles_ = java.util.Collections.unmodifiableList(vectorTiles_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return TileQueryResponseOuterClass.internal_static_TileQueryResponse_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return TileQueryResponseOuterClass.internal_static_TileQueryResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    TileQueryResponse.class, Builder.class);
        }

        public interface VectorTileOrBuilder extends
            // @@protoc_insertion_point(interface_extends:TileQueryResponse.VectorTile)
            com.google.protobuf.MessageOrBuilder {

            /**
             * <code>.TileQueryResponse.Coordinate geo = 1;</code>
             */
            boolean hasGeo();

            /**
             * <code>.TileQueryResponse.Coordinate geo = 1;</code>
             */
            Coordinate getGeo();

            /**
             * <code>.TileQueryResponse.Coordinate geo = 1;</code>
             */
            CoordinateOrBuilder getGeoOrBuilder();

            /**
             * <code>bytes vector_tiles = 3;</code>
             */
            com.google.protobuf.ByteString getVectorTiles();
        }

        /**
         * Protobuf type {@code TileQueryResponse.VectorTile}
         */
        public static final class VectorTile extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:TileQueryResponse.VectorTile)
            VectorTileOrBuilder {
            private static final long serialVersionUID = 0L;

            // Use VectorTile.newBuilder() to construct.
            private VectorTile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }

            private VectorTile() {
                vectorTiles_ = com.google.protobuf.ByteString.EMPTY;
            }

            @Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }

            private VectorTile(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {
                                Coordinate.Builder subBuilder = null;
                                if (geo_ != null) {
                                    subBuilder = geo_.toBuilder();
                                }
                                geo_ = input.readMessage(Coordinate.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(geo_);
                                    geo_ = subBuilder.buildPartial();
                                }

                                break;
                            }
                            case 26: {

                                vectorTiles_ = input.readBytes();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return TileQueryResponseOuterClass.internal_static_TileQueryResponse_VectorTile_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return TileQueryResponseOuterClass.internal_static_TileQueryResponse_VectorTile_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                        VectorTile.class, Builder.class);
            }

            public static final int GEO_FIELD_NUMBER = 1;
            private Coordinate geo_;

            /**
             * <code>.TileQueryResponse.Coordinate geo = 1;</code>
             */
            public boolean hasGeo() {
                return geo_ != null;
            }

            /**
             * <code>.TileQueryResponse.Coordinate geo = 1;</code>
             */
            public Coordinate getGeo() {
                return geo_ == null ? Coordinate.getDefaultInstance() : geo_;
            }

            /**
             * <code>.TileQueryResponse.Coordinate geo = 1;</code>
             */
            public CoordinateOrBuilder getGeoOrBuilder() {
                return getGeo();
            }

            public static final int VECTOR_TILES_FIELD_NUMBER = 3;
            private com.google.protobuf.ByteString vectorTiles_;

            /**
             * <code>bytes vector_tiles = 3;</code>
             */
            public com.google.protobuf.ByteString getVectorTiles() {
                return vectorTiles_;
            }

            private byte memoizedIsInitialized = -1;

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
                if (geo_ != null) {
                    output.writeMessage(1, getGeo());
                }
                if (!vectorTiles_.isEmpty()) {
                    output.writeBytes(3, vectorTiles_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (geo_ != null) {
                    size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getGeo());
                }
                if (!vectorTiles_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, vectorTiles_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @Override
            public boolean equals(final Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof VectorTile)) {
                    return super.equals(obj);
                }
                VectorTile other = (VectorTile) obj;

                boolean result = true;
                result = result && (hasGeo() == other.hasGeo());
                if (hasGeo()) {
                    result = result && getGeo()
                        .equals(other.getGeo());
                }
                result = result && getVectorTiles()
                    .equals(other.getVectorTiles());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                if (hasGeo()) {
                    hash = (37 * hash) + GEO_FIELD_NUMBER;
                    hash = (53 * hash) + getGeo().hashCode();
                }
                hash = (37 * hash) + VECTOR_TILES_FIELD_NUMBER;
                hash = (53 * hash) + getVectorTiles().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static VectorTile parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static VectorTile parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static VectorTile parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static VectorTile parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static VectorTile parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static VectorTile parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static VectorTile parseFrom(java.io.InputStream input)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
            }

            public static VectorTile parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static VectorTile parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
            }

            public static VectorTile parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static VectorTile parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
            }

            public static VectorTile parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(VectorTile prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
            }

            @Override
            protected Builder newBuilderForType(
                BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code TileQueryResponse.VectorTile}
             */
            public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:TileQueryResponse.VectorTile)
                VectorTileOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return TileQueryResponseOuterClass.internal_static_TileQueryResponse_VectorTile_descriptor;
                }

                protected FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return TileQueryResponseOuterClass.internal_static_TileQueryResponse_VectorTile_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                            VectorTile.class, Builder.class);
                }

                // Construct using TileQueryResponseOuterClass.TileQueryResponse.VectorTile.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                    BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    }
                }

                public Builder clear() {
                    super.clear();
                    if (geoBuilder_ == null) {
                        geo_ = null;
                    } else {
                        geo_ = null;
                        geoBuilder_ = null;
                    }
                    vectorTiles_ = com.google.protobuf.ByteString.EMPTY;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return TileQueryResponseOuterClass.internal_static_TileQueryResponse_VectorTile_descriptor;
                }

                public VectorTile getDefaultInstanceForType() {
                    return VectorTile.getDefaultInstance();
                }

                public VectorTile build() {
                    VectorTile result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public VectorTile buildPartial() {
                    VectorTile result = new VectorTile(this);
                    if (geoBuilder_ == null) {
                        result.geo_ = geo_;
                    } else {
                        result.geo_ = geoBuilder_.build();
                    }
                    result.vectorTiles_ = vectorTiles_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof VectorTile) {
                        return mergeFrom((VectorTile) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(VectorTile other) {
                    if (other == VectorTile.getDefaultInstance()) return this;
                    if (other.hasGeo()) {
                        mergeGeo(other.getGeo());
                    }
                    if (other.getVectorTiles() != com.google.protobuf.ByteString.EMPTY) {
                        setVectorTiles(other.getVectorTiles());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                    VectorTile parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (VectorTile) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private Coordinate geo_ = null;
                private com.google.protobuf.SingleFieldBuilderV3<
                    Coordinate, Coordinate.Builder, CoordinateOrBuilder> geoBuilder_;

                /**
                 * <code>.TileQueryResponse.Coordinate geo = 1;</code>
                 */
                public boolean hasGeo() {
                    return geoBuilder_ != null || geo_ != null;
                }

                /**
                 * <code>.TileQueryResponse.Coordinate geo = 1;</code>
                 */
                public Coordinate getGeo() {
                    if (geoBuilder_ == null) {
                        return geo_ == null ? Coordinate.getDefaultInstance() : geo_;
                    } else {
                        return geoBuilder_.getMessage();
                    }
                }

                /**
                 * <code>.TileQueryResponse.Coordinate geo = 1;</code>
                 */
                public Builder setGeo(Coordinate value) {
                    if (geoBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        geo_ = value;
                        onChanged();
                    } else {
                        geoBuilder_.setMessage(value);
                    }

                    return this;
                }

                /**
                 * <code>.TileQueryResponse.Coordinate geo = 1;</code>
                 */
                public Builder setGeo(
                    Coordinate.Builder builderForValue) {
                    if (geoBuilder_ == null) {
                        geo_ = builderForValue.build();
                        onChanged();
                    } else {
                        geoBuilder_.setMessage(builderForValue.build());
                    }

                    return this;
                }

                /**
                 * <code>.TileQueryResponse.Coordinate geo = 1;</code>
                 */
                public Builder mergeGeo(Coordinate value) {
                    if (geoBuilder_ == null) {
                        if (geo_ != null) {
                            geo_ =
                                Coordinate.newBuilder(geo_).mergeFrom(value).buildPartial();
                        } else {
                            geo_ = value;
                        }
                        onChanged();
                    } else {
                        geoBuilder_.mergeFrom(value);
                    }

                    return this;
                }

                /**
                 * <code>.TileQueryResponse.Coordinate geo = 1;</code>
                 */
                public Builder clearGeo() {
                    if (geoBuilder_ == null) {
                        geo_ = null;
                        onChanged();
                    } else {
                        geo_ = null;
                        geoBuilder_ = null;
                    }

                    return this;
                }

                /**
                 * <code>.TileQueryResponse.Coordinate geo = 1;</code>
                 */
                public Coordinate.Builder getGeoBuilder() {

                    onChanged();
                    return getGeoFieldBuilder().getBuilder();
                }

                /**
                 * <code>.TileQueryResponse.Coordinate geo = 1;</code>
                 */
                public CoordinateOrBuilder getGeoOrBuilder() {
                    if (geoBuilder_ != null) {
                        return geoBuilder_.getMessageOrBuilder();
                    } else {
                        return geo_ == null ?
                            Coordinate.getDefaultInstance() : geo_;
                    }
                }

                /**
                 * <code>.TileQueryResponse.Coordinate geo = 1;</code>
                 */
                private com.google.protobuf.SingleFieldBuilderV3<
                    Coordinate, Coordinate.Builder, CoordinateOrBuilder>
                getGeoFieldBuilder() {
                    if (geoBuilder_ == null) {
                        geoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            Coordinate, Coordinate.Builder, CoordinateOrBuilder>(
                            getGeo(),
                            getParentForChildren(),
                            isClean());
                        geo_ = null;
                    }
                    return geoBuilder_;
                }

                private com.google.protobuf.ByteString vectorTiles_ = com.google.protobuf.ByteString.EMPTY;

                /**
                 * <code>bytes vector_tiles = 3;</code>
                 */
                public com.google.protobuf.ByteString getVectorTiles() {
                    return vectorTiles_;
                }

                /**
                 * <code>bytes vector_tiles = 3;</code>
                 */
                public Builder setVectorTiles(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    vectorTiles_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>bytes vector_tiles = 3;</code>
                 */
                public Builder clearVectorTiles() {

                    vectorTiles_ = getDefaultInstance().getVectorTiles();
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:TileQueryResponse.VectorTile)
            }

            // @@protoc_insertion_point(class_scope:TileQueryResponse.VectorTile)
            private static final VectorTile DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new VectorTile();
            }

            public static VectorTile getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<VectorTile>
                PARSER = new com.google.protobuf.AbstractParser<VectorTile>() {
                public VectorTile parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                    return new VectorTile(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<VectorTile> parser() {
                return PARSER;
            }

            @Override
            public com.google.protobuf.Parser<VectorTile> getParserForType() {
                return PARSER;
            }

            public VectorTile getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        public interface CoordinateOrBuilder extends
            // @@protoc_insertion_point(interface_extends:TileQueryResponse.Coordinate)
            com.google.protobuf.MessageOrBuilder {

            /**
             * <code>uint32 x = 1;</code>
             */
            int getX();

            /**
             * <code>uint32 y = 2;</code>
             */
            int getY();
        }

        /**
         * Protobuf type {@code TileQueryResponse.Coordinate}
         */
        public static final class Coordinate extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:TileQueryResponse.Coordinate)
            CoordinateOrBuilder {
            private static final long serialVersionUID = 0L;

            // Use Coordinate.newBuilder() to construct.
            private Coordinate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }

            private Coordinate() {
                x_ = 0;
                y_ = 0;
            }

            @Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }

            private Coordinate(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {

                                x_ = input.readUInt32();
                                break;
                            }
                            case 16: {

                                y_ = input.readUInt32();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return TileQueryResponseOuterClass.internal_static_TileQueryResponse_Coordinate_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return TileQueryResponseOuterClass.internal_static_TileQueryResponse_Coordinate_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                        Coordinate.class, Builder.class);
            }

            public static final int X_FIELD_NUMBER = 1;
            private int x_;

            /**
             * <code>uint32 x = 1;</code>
             */
            public int getX() {
                return x_;
            }

            public static final int Y_FIELD_NUMBER = 2;
            private int y_;

            /**
             * <code>uint32 y = 2;</code>
             */
            public int getY() {
                return y_;
            }

            private byte memoizedIsInitialized = -1;

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
                if (x_ != 0) {
                    output.writeUInt32(1, x_);
                }
                if (y_ != 0) {
                    output.writeUInt32(2, y_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (x_ != 0) {
                    size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, x_);
                }
                if (y_ != 0) {
                    size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, y_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @Override
            public boolean equals(final Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof Coordinate)) {
                    return super.equals(obj);
                }
                Coordinate other = (Coordinate) obj;

                boolean result = true;
                result = result && (getX()
                    == other.getX());
                result = result && (getY()
                    == other.getY());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + X_FIELD_NUMBER;
                hash = (53 * hash) + getX();
                hash = (37 * hash) + Y_FIELD_NUMBER;
                hash = (53 * hash) + getY();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static Coordinate parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static Coordinate parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static Coordinate parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static Coordinate parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static Coordinate parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static Coordinate parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static Coordinate parseFrom(java.io.InputStream input)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
            }

            public static Coordinate parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public static Coordinate parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
            }

            public static Coordinate parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }

            public static Coordinate parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
            }

            public static Coordinate parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }

            public static Builder newBuilder(Coordinate prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
            }

            @Override
            protected Builder newBuilderForType(
                BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code TileQueryResponse.Coordinate}
             */
            public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:TileQueryResponse.Coordinate)
                CoordinateOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return TileQueryResponseOuterClass.internal_static_TileQueryResponse_Coordinate_descriptor;
                }

                protected FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return TileQueryResponseOuterClass.internal_static_TileQueryResponse_Coordinate_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                            Coordinate.class, Builder.class);
                }

                // Construct using TileQueryResponseOuterClass.TileQueryResponse.Coordinate.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                    BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    }
                }

                public Builder clear() {
                    super.clear();
                    x_ = 0;

                    y_ = 0;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return TileQueryResponseOuterClass.internal_static_TileQueryResponse_Coordinate_descriptor;
                }

                public Coordinate getDefaultInstanceForType() {
                    return Coordinate.getDefaultInstance();
                }

                public Coordinate build() {
                    Coordinate result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public Coordinate buildPartial() {
                    Coordinate result = new Coordinate(this);
                    result.x_ = x_;
                    result.y_ = y_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }

                public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                    return (Builder) super.setField(field, value);
                }

                public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }

                public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }

                public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }

                public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof Coordinate) {
                        return mergeFrom((Coordinate) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(Coordinate other) {
                    if (other == Coordinate.getDefaultInstance()) return this;
                    if (other.getX() != 0) {
                        setX(other.getX());
                    }
                    if (other.getY() != 0) {
                        setY(other.getY());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                    Coordinate parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (Coordinate) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int x_;

                /**
                 * <code>uint32 x = 1;</code>
                 */
                public int getX() {
                    return x_;
                }

                /**
                 * <code>uint32 x = 1;</code>
                 */
                public Builder setX(int value) {

                    x_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>uint32 x = 1;</code>
                 */
                public Builder clearX() {

                    x_ = 0;
                    onChanged();
                    return this;
                }

                private int y_;

                /**
                 * <code>uint32 y = 2;</code>
                 */
                public int getY() {
                    return y_;
                }

                /**
                 * <code>uint32 y = 2;</code>
                 */
                public Builder setY(int value) {

                    y_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>uint32 y = 2;</code>
                 */
                public Builder clearY() {

                    y_ = 0;
                    onChanged();
                    return this;
                }

                public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:TileQueryResponse.Coordinate)
            }

            // @@protoc_insertion_point(class_scope:TileQueryResponse.Coordinate)
            private static final Coordinate DEFAULT_INSTANCE;

            static {
                DEFAULT_INSTANCE = new Coordinate();
            }

            public static Coordinate getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<Coordinate>
                PARSER = new com.google.protobuf.AbstractParser<Coordinate>() {
                public Coordinate parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Coordinate(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<Coordinate> parser() {
                return PARSER;
            }

            @Override
            public com.google.protobuf.Parser<Coordinate> getParserForType() {
                return PARSER;
            }

            public Coordinate getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int ZOOM_FIELD_NUMBER = 1;
        private int zoom_;

        /**
         * <code>uint32 zoom = 1;</code>
         */
        public int getZoom() {
            return zoom_;
        }

        public static final int VECTOR_TILES_FIELD_NUMBER = 2;
        private java.util.List<VectorTile> vectorTiles_;

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        public java.util.List<VectorTile> getVectorTilesList() {
            return vectorTiles_;
        }

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        public java.util.List<? extends VectorTileOrBuilder>
        getVectorTilesOrBuilderList() {
            return vectorTiles_;
        }

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        public int getVectorTilesCount() {
            return vectorTiles_.size();
        }

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        public VectorTile getVectorTiles(int index) {
            return vectorTiles_.get(index);
        }

        /**
         * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
         */
        public VectorTileOrBuilder getVectorTilesOrBuilder(
            int index) {
            return vectorTiles_.get(index);
        }

        public static final int INVALIDATION_TOKEN_FIELD_NUMBER = 3;
        private long invalidationToken_;

        /**
         * <code>uint64 invalidation_token = 3;</code>
         */
        public long getInvalidationToken() {
            return invalidationToken_;
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
            if (zoom_ != 0) {
                output.writeUInt32(1, zoom_);
            }
            for (int i = 0; i < vectorTiles_.size(); i++) {
                output.writeMessage(2, vectorTiles_.get(i));
            }
            if (invalidationToken_ != 0L) {
                output.writeUInt64(3, invalidationToken_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (zoom_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                    .computeUInt32Size(1, zoom_);
            }
            for (int i = 0; i < vectorTiles_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(2, vectorTiles_.get(i));
            }
            if (invalidationToken_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                    .computeUInt64Size(3, invalidationToken_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof TileQueryResponse)) {
                return super.equals(obj);
            }
            TileQueryResponse other = (TileQueryResponse) obj;

            boolean result = true;
            result = result && (getZoom()
                == other.getZoom());
            result = result && getVectorTilesList()
                .equals(other.getVectorTilesList());
            result = result && (getInvalidationToken()
                == other.getInvalidationToken());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getZoom();
            if (getVectorTilesCount() > 0) {
                hash = (37 * hash) + VECTOR_TILES_FIELD_NUMBER;
                hash = (53 * hash) + getVectorTilesList().hashCode();
            }
            hash = (37 * hash) + INVALIDATION_TOKEN_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getInvalidationToken());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static TileQueryResponse parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static TileQueryResponse parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static TileQueryResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static TileQueryResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static TileQueryResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static TileQueryResponse parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static TileQueryResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
        }

        public static TileQueryResponse parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static TileQueryResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
        }

        public static TileQueryResponse parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static TileQueryResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
        }

        public static TileQueryResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(TileQueryResponse prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
            BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code TileQueryResponse}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:TileQueryResponse)
            TileQueryResponseOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return TileQueryResponseOuterClass.internal_static_TileQueryResponse_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return TileQueryResponseOuterClass.internal_static_TileQueryResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                        TileQueryResponse.class, Builder.class);
            }

            // Construct using TileQueryResponseOuterClass.TileQueryResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
                    getVectorTilesFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                zoom_ = 0;

                if (vectorTilesBuilder_ == null) {
                    vectorTiles_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    vectorTilesBuilder_.clear();
                }
                invalidationToken_ = 0L;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return TileQueryResponseOuterClass.internal_static_TileQueryResponse_descriptor;
            }

            public TileQueryResponse getDefaultInstanceForType() {
                return TileQueryResponse.getDefaultInstance();
            }

            public TileQueryResponse build() {
                TileQueryResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public TileQueryResponse buildPartial() {
                TileQueryResponse result = new TileQueryResponse(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.zoom_ = zoom_;
                if (vectorTilesBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        vectorTiles_ = java.util.Collections.unmodifiableList(vectorTiles_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.vectorTiles_ = vectorTiles_;
                } else {
                    result.vectorTiles_ = vectorTilesBuilder_.build();
                }
                result.invalidationToken_ = invalidationToken_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }

            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof TileQueryResponse) {
                    return mergeFrom((TileQueryResponse) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(TileQueryResponse other) {
                if (other == TileQueryResponse.getDefaultInstance()) return this;
                if (other.getZoom() != 0) {
                    setZoom(other.getZoom());
                }
                if (vectorTilesBuilder_ == null) {
                    if (!other.vectorTiles_.isEmpty()) {
                        if (vectorTiles_.isEmpty()) {
                            vectorTiles_ = other.vectorTiles_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureVectorTilesIsMutable();
                            vectorTiles_.addAll(other.vectorTiles_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.vectorTiles_.isEmpty()) {
                        if (vectorTilesBuilder_.isEmpty()) {
                            vectorTilesBuilder_.dispose();
                            vectorTilesBuilder_ = null;
                            vectorTiles_ = other.vectorTiles_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            vectorTilesBuilder_ =
                                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                    getVectorTilesFieldBuilder() : null;
                        } else {
                            vectorTilesBuilder_.addAllMessages(other.vectorTiles_);
                        }
                    }
                }
                if (other.getInvalidationToken() != 0L) {
                    setInvalidationToken(other.getInvalidationToken());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
                TileQueryResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (TileQueryResponse) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int zoom_;

            /**
             * <code>uint32 zoom = 1;</code>
             */
            public int getZoom() {
                return zoom_;
            }

            /**
             * <code>uint32 zoom = 1;</code>
             */
            public Builder setZoom(int value) {

                zoom_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>uint32 zoom = 1;</code>
             */
            public Builder clearZoom() {

                zoom_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<VectorTile> vectorTiles_ =
                java.util.Collections.emptyList();

            private void ensureVectorTilesIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    vectorTiles_ = new java.util.ArrayList<VectorTile>(vectorTiles_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                VectorTile, VectorTile.Builder, VectorTileOrBuilder> vectorTilesBuilder_;

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public java.util.List<VectorTile> getVectorTilesList() {
                if (vectorTilesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(vectorTiles_);
                } else {
                    return vectorTilesBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public int getVectorTilesCount() {
                if (vectorTilesBuilder_ == null) {
                    return vectorTiles_.size();
                } else {
                    return vectorTilesBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public VectorTile getVectorTiles(int index) {
                if (vectorTilesBuilder_ == null) {
                    return vectorTiles_.get(index);
                } else {
                    return vectorTilesBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public Builder setVectorTiles(
                int index, VectorTile value) {
                if (vectorTilesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureVectorTilesIsMutable();
                    vectorTiles_.set(index, value);
                    onChanged();
                } else {
                    vectorTilesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public Builder setVectorTiles(
                int index, VectorTile.Builder builderForValue) {
                if (vectorTilesBuilder_ == null) {
                    ensureVectorTilesIsMutable();
                    vectorTiles_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    vectorTilesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public Builder addVectorTiles(VectorTile value) {
                if (vectorTilesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureVectorTilesIsMutable();
                    vectorTiles_.add(value);
                    onChanged();
                } else {
                    vectorTilesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public Builder addVectorTiles(
                int index, VectorTile value) {
                if (vectorTilesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureVectorTilesIsMutable();
                    vectorTiles_.add(index, value);
                    onChanged();
                } else {
                    vectorTilesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public Builder addVectorTiles(
                VectorTile.Builder builderForValue) {
                if (vectorTilesBuilder_ == null) {
                    ensureVectorTilesIsMutable();
                    vectorTiles_.add(builderForValue.build());
                    onChanged();
                } else {
                    vectorTilesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public Builder addVectorTiles(
                int index, VectorTile.Builder builderForValue) {
                if (vectorTilesBuilder_ == null) {
                    ensureVectorTilesIsMutable();
                    vectorTiles_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    vectorTilesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public Builder addAllVectorTiles(
                Iterable<? extends VectorTile> values) {
                if (vectorTilesBuilder_ == null) {
                    ensureVectorTilesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, vectorTiles_);
                    onChanged();
                } else {
                    vectorTilesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public Builder clearVectorTiles() {
                if (vectorTilesBuilder_ == null) {
                    vectorTiles_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    vectorTilesBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public Builder removeVectorTiles(int index) {
                if (vectorTilesBuilder_ == null) {
                    ensureVectorTilesIsMutable();
                    vectorTiles_.remove(index);
                    onChanged();
                } else {
                    vectorTilesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public VectorTile.Builder getVectorTilesBuilder(
                int index) {
                return getVectorTilesFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public VectorTileOrBuilder getVectorTilesOrBuilder(
                int index) {
                if (vectorTilesBuilder_ == null) {
                    return vectorTiles_.get(index);
                } else {
                    return vectorTilesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public java.util.List<? extends VectorTileOrBuilder>
            getVectorTilesOrBuilderList() {
                if (vectorTilesBuilder_ != null) {
                    return vectorTilesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(vectorTiles_);
                }
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public VectorTile.Builder addVectorTilesBuilder() {
                return getVectorTilesFieldBuilder().addBuilder(
                    VectorTile.getDefaultInstance());
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public VectorTile.Builder addVectorTilesBuilder(
                int index) {
                return getVectorTilesFieldBuilder().addBuilder(
                    index, VectorTile.getDefaultInstance());
            }

            /**
             * <code>repeated .TileQueryResponse.VectorTile vector_tiles = 2;</code>
             */
            public java.util.List<VectorTile.Builder>
            getVectorTilesBuilderList() {
                return getVectorTilesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                VectorTile, VectorTile.Builder, VectorTileOrBuilder>
            getVectorTilesFieldBuilder() {
                if (vectorTilesBuilder_ == null) {
                    vectorTilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                        VectorTile, VectorTile.Builder, VectorTileOrBuilder>(
                        vectorTiles_,
                        ((bitField0_ & 0x00000002) == 0x00000002),
                        getParentForChildren(),
                        isClean());
                    vectorTiles_ = null;
                }
                return vectorTilesBuilder_;
            }

            private long invalidationToken_;

            /**
             * <code>uint64 invalidation_token = 3;</code>
             */
            public long getInvalidationToken() {
                return invalidationToken_;
            }

            /**
             * <code>uint64 invalidation_token = 3;</code>
             */
            public Builder setInvalidationToken(long value) {

                invalidationToken_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>uint64 invalidation_token = 3;</code>
             */
            public Builder clearInvalidationToken() {

                invalidationToken_ = 0L;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:TileQueryResponse)
        }

        // @@protoc_insertion_point(class_scope:TileQueryResponse)
        private static final TileQueryResponse DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new TileQueryResponse();
        }

        public static TileQueryResponse getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<TileQueryResponse>
            PARSER = new com.google.protobuf.AbstractParser<TileQueryResponse>() {
            public TileQueryResponse parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
                return new TileQueryResponse(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<TileQueryResponse> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<TileQueryResponse> getParserForType() {
            return PARSER;
        }

        public TileQueryResponse getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
        internal_static_TileQueryResponse_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internal_static_TileQueryResponse_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
        internal_static_TileQueryResponse_VectorTile_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internal_static_TileQueryResponse_VectorTile_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
        internal_static_TileQueryResponse_Coordinate_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internal_static_TileQueryResponse_Coordinate_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
        descriptor;

    static {
        String[] descriptorData = {
            "\n\031tile_query_response.proto\"\346\001\n\021TileQuer" +
                "yResponse\022\014\n\004zoom\030\001 \001(\r\0223\n\014vector_tiles\030" +
                "\002 \003(\0132\035.TileQueryResponse.VectorTile\022\032\n\022" +
                "invalidation_token\030\003 \001(\004\032N\n\nVectorTile\022*" +
                "\n\003geo\030\001 \001(\0132\035.TileQueryResponse.Coordina" +
                "te\022\024\n\014vector_tiles\030\003 \001(\014\032\"\n\nCoordinate\022\t" +
                "\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001(\rb\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                public com.google.protobuf.ExtensionRegistry assignDescriptors(
                    com.google.protobuf.Descriptors.FileDescriptor root) {
                    descriptor = root;
                    return null;
                }
            };
        com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                new com.google.protobuf.Descriptors.FileDescriptor[]{
                }, assigner);
        internal_static_TileQueryResponse_descriptor =
            getDescriptor().getMessageTypes().get(0);
        internal_static_TileQueryResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_TileQueryResponse_descriptor,
            new String[]{"Zoom", "VectorTiles", "InvalidationToken",});
        internal_static_TileQueryResponse_VectorTile_descriptor =
            internal_static_TileQueryResponse_descriptor.getNestedTypes().get(0);
        internal_static_TileQueryResponse_VectorTile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_TileQueryResponse_VectorTile_descriptor,
            new String[]{"Geo", "VectorTiles",});
        internal_static_TileQueryResponse_Coordinate_descriptor =
            internal_static_TileQueryResponse_descriptor.getNestedTypes().get(1);
        internal_static_TileQueryResponse_Coordinate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_TileQueryResponse_Coordinate_descriptor,
            new String[]{"X", "Y",});
    }

    // @@protoc_insertion_point(outer_class_scope)
}
